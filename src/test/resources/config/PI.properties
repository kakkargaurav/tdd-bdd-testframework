# Payment Initiation (PI) Environment Configuration
# Australian Bank Payment Initiation API Testing Environment

# Base URL Configuration
base.url=http://localhost:3232
timeout=60000

# Authentication Configuration
auth.type=apikey
auth.api.key=test-payment-initiation-key
auth.header.name=X-API-Key

# API Endpoints Configuration
api.version=v1
api.base.path=/payment-initiation

# Payment Initiation API Specific Configuration
payment.api.timeout.connection=15000
payment.api.timeout.socket=60000
payment.api.retry.attempts=3
payment.api.retry.delay=2000

# NPP Payment Configuration
npp.max.amount=100000.00
npp.min.amount=0.01
npp.default.currency=AUD
npp.test.account.debit=123456789
npp.test.account.credit=987654321
npp.test.bank.code.debit=123-456
npp.test.bank.code.credit=654-321

# BECS Payment Configuration
becs.max.amount=1000000.00
becs.min.amount=1.00
becs.processing.day=NEXT_DAY
becs.transaction.code.default=50
becs.test.apcs.number=123456
becs.test.user.id=123456

# BPAY Payment Configuration
bpay.max.amount=50000.00
bpay.min.amount=0.01
bpay.test.biller.code=123456
bpay.test.reference=987654321098
bpay.default.payment.method=INTERNET_BANKING

# Direct Debit Configuration
direct.debit.max.amount=10000.00
direct.debit.min.amount=1.00
direct.debit.default.frequency=MONTHLY
direct.debit.default.notification.days=14
direct.debit.auth.method=ONLINE

# Domestic Wire Transfer Configuration
domestic.wire.min.amount=1000.00
domestic.wire.max.amount=10000000.00
domestic.wire.default.priority=NORMAL
domestic.wire.settlement.method=RTGS
domestic.wire.charge.bearer=SHARED

# International Wire Transfer Configuration
international.wire.min.amount=100.00
international.wire.max.amount=1000000.00
international.wire.default.currency=USD
international.wire.default.priority=NORMAL
international.wire.purpose.code=TRADE
international.wire.correspondent.bic=CHASUS33

# Test Data Configuration
test.data.create.payments=true
test.data.cleanup=true
test.data.use.random.amounts=true
test.data.base.account.prefix=TEST

# Validation Configuration
validation.schema.enabled=true
validation.amount.format.strict=true
validation.account.format.strict=true
validation.currency.restricted=AUD,USD,EUR,GBP

# Performance Testing Configuration
performance.concurrent.threads=10
performance.max.response.time=5000
performance.load.test.duration=300
performance.ramp.up.time=60

# Error Simulation Configuration
error.simulation.enabled=true
error.insufficient.funds.account=999999999
error.invalid.account=888888888
error.blocked.bic=BLOCKEDXX
error.compliance.failure.country=BLOCKED

# Logging Configuration
log.level=INFO
log.file.path=target/logs/payment-initiation.log
log.request.response=true
log.sensitive.data=false

# Report Configuration
report.payment.details=true
report.performance.metrics=true
report.error.analysis=true
report.compliance.tracking=true

# BIAN Standard Configuration
bian.version=12.0.0
bian.service.domain=Payment_Initiation
bian.control.record=enabled
bian.behavior.qualifier=enabled

# Australian Payment System Configuration
aus.payment.system.npp.enabled=true
aus.payment.system.becs.enabled=true
aus.payment.system.bpay.enabled=true
aus.payment.system.rtgs.enabled=true

# Compliance and Regulatory Configuration
compliance.aml.checks=true
compliance.sanctions.screening=true
compliance.transaction.monitoring=true
compliance.reporting.enabled=true

# Test Scenario Configuration
scenario.positive.tests=true
scenario.negative.tests=true
scenario.edge.cases=true
scenario.performance.tests=true
scenario.security.tests=true

# Mock Service Configuration
mock.service.enabled=false
mock.service.url=http://localhost:8080
mock.service.responses.realistic=true

# Database Configuration (if applicable)
db.connection.enabled=false
db.url=jdbc:h2:mem:paymentdb
db.username=sa
db.password=
db.driver=org.h2.Driver

# External Service Integration
external.service.bank.core=http://localhost:8081
external.service.payment.hub=http://localhost:8082
external.service.compliance=http://localhost:8083
external.service.notification=http://localhost:8084

# Monitoring and Observability
monitoring.enabled=true
monitoring.metrics.endpoint=/metrics
monitoring.health.endpoint=/health
monitoring.trace.enabled=true

# Security Configuration
security.ssl.enabled=false
security.certificate.validation=false
security.encryption.enabled=false
security.token.validation=false

# Rate Limiting Configuration
rate.limit.enabled=true
rate.limit.requests.per.minute=1000
rate.limit.burst.capacity=100
rate.limit.window.size=60

# Circuit Breaker Configuration
circuit.breaker.enabled=true
circuit.breaker.failure.threshold=10
circuit.breaker.timeout=30000
circuit.breaker.recovery.timeout=60000

# Cache Configuration
cache.enabled=true
cache.payment.data.ttl=300
cache.account.validation.ttl=600
cache.exchange.rates.ttl=900

# Notification Configuration
notification.enabled=true
notification.email.enabled=false
notification.sms.enabled=false
notification.webhook.enabled=true
notification.webhook.url=http://localhost:9090/webhooks

# Audit and Compliance Logging
audit.enabled=true
audit.payment.lifecycle=true
audit.user.actions=true
audit.system.events=true
audit.retention.days=2555

# Test Environment Specific Settings
test.environment=PI
test.parallel.execution=true
test.data.isolation=true
test.cleanup.automatic=true
test.mock.external.services=true

# API Gateway Configuration (if applicable)
gateway.enabled=false
gateway.url=https://api-gateway.example.com
gateway.api.key=${PI_GATEWAY_API_KEY}
gateway.rate.limit=10000

# Load Balancer Configuration
load.balancer.enabled=false
load.balancer.strategy=ROUND_ROBIN
load.balancer.health.check=true

# Failover Configuration
failover.enabled=true
failover.secondary.url=http://localhost:3233
failover.timeout=10000
failover.retry.attempts=3